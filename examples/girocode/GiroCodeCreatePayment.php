<?php
/**
 * Sample code for GiroCheckout integration of getting a reference for a
 * GiroCode Payment transaction
 *
 * @filesource
 * @package Samples
 * @version $Revision: 73 $ / $Date: 2014-10-01 17:40:24 +0200 (Mi, 01 Okt 2014) $
 */
require '../vendor/autoload.php';
use girosolution\GiroCheckout_SDK\GiroCheckout_SDK_Request;
use girosolution\GiroCheckout_SDK\helper\GiroCheckout_SDK_TransactionType_helper;

/**
 * configuration of the merchants identifier, project and password
 * this information can be found in the GiroCockpit's project settings
 */
$merchantID = 0;        // Your merchant ID (Verkaufer-ID)
$projectID = 0;         // Your project ID (Projekt-ID)
$projectPassword = "";  // Your project password

/* get a reference for a GiroCode Payment transaction */
try {
	$request = new GiroCheckout_SDK_Request(GiroCheckout_SDK_TransactionType_helper::TRANS_TYPE_GIROCODE_CREATE_PMT );
	$request->setSecret($projectPassword);
	$request->addParam('merchantId',$merchantID)
	        ->addParam('projectId',$projectID)
	        ->addParam('merchantTxId', 1234567890)
	        ->addParam('amount',100)
	        ->addParam('currency','EUR')
	        ->addParam('purposetext','GiroCode Transaktion')
	        ->addParam('urlRedirect','https://www.my-domain.de/girocheckout/redirect-girocode')
	        ->addParam('urlNotify','https://www.my-domain.de/girocheckout/redirect-girocode')
	        ->addParam('format', 'epc-qr-optimizied')
	        ->addParam('resolution', 300)
	    //the hash field is auto generated by the SDK
	        ->submit();


	/* if transaction succeeded  */
	if($request->requestHasSucceeded()) {
    $request->getResponseParam('rc');
    $request->getResponseParam('msg');
    $request->getResponseParam('girocodereference');
    base64_decode($request->getResponseParam('image'));
    $request->getResponseParam('url');
	}
	/* if the transaction did not succeed update your local system, get the responsecode and notify the customer */
	else {
    $request->getResponseParam('rc');
    $request->getResponseParam('msg');
    $request->getResponseMessage($request->getResponseParam('rc'),'DE');
	}
}
catch (Exception $e) { echo $e->getMessage(); }